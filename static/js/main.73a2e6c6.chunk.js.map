{"version":3,"sources":["Components/StatRoller/RollerLogic.js","Components/StatRoller/RollButton.jsx","Components/StatRoller/StatRoller.jsx","App.js","reportWebVitals.js","index.js"],"names":["Roll_Stat","stat","i","Math","floor","random","sort","a","b","length","reduce","Roll_New_Array","stats","Roll_Stats","array","valid","RollButton","props","setStats","SetStats","rollStats","RollStats","onClick","StatRoller","MODIFIERS","useState","map","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMASA,SAASA,IAIL,IAFA,IAAIC,EAAO,CAAC,EAAE,EAAE,EAAE,GAEVC,EAAI,EAAGA,EAAI,EAAGA,IAElBD,EAAKC,GATFC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAevC,OAHAJ,EAAKK,MAAK,SAASC,EAAGC,GAAG,OAAOA,EAAID,KACpCN,EAAKA,EAAKQ,OAAO,GAAK,EAEfR,EAAKS,QAAO,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAGxC,SAASG,IAIL,IAFA,IAAIC,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAEfV,EAAI,EAAGA,EAAI,EAAGA,IAElBU,EAAMV,GAAKF,IAGf,OAAOY,EAyBJ,SAASC,IAKZ,IAHA,IAxBoBC,EAwBhBF,EAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GACnBG,GAAQ,GAELA,GAEHH,EAAQD,KA7BQG,EA8BOF,GA5BrBN,MAAK,SAASC,EAAGC,GAAG,OAAOA,EAAID,KA4BjCQ,IA1BDD,EAAMJ,QAAO,SAACH,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAxCnB,OA6CXM,EAAMA,EAAML,OAAO,GA5CV,MAiDTK,EAAM,GAhDG,IAmEZ,OAAOF,E,WC3DII,MAVf,SAAoBC,GAEhB,IAAIC,EAAWD,EAAME,SACjBC,EAAYH,EAAMI,UAItB,OAAO,wBAAQC,QAFJ,WAAWJ,EAASE,MAExB,oBCkBIG,MArBf,SAAoBN,GAGhB,IAAIO,EAAY,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAErE,EAAyBC,mBAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAA7C,mBAAMb,EAAN,KAAaM,EAAb,KAEA,OACI,gCACI,oDACA,6BACHN,EAAMc,KAAI,SAAAC,GACT,OAAO,8BAAIA,EAAJ,KAAYH,EAAUG,GAAtB,YAGL,cAAC,EAAD,CAAYN,UAAWR,EAAYM,SAAUD,IAPjD,IAO6D,0CACzD,qDCTGU,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qEACA,cAAC,EAAD,QCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.73a2e6c6.chunk.js","sourcesContent":["const POINT_MIN = 75\r\nconst MAX_NEG = 9\r\nconst MIN_POS = 14\r\n\r\nfunction Roll_d6()\r\n{\r\n    return Math.floor(Math.random() * 6) + 1\r\n}\r\n\r\nfunction Roll_Stat()\r\n{\r\n    var stat = [0,0,0,0]\r\n\r\n    for(var i = 0; i < 4; i++)\r\n    {\r\n        stat[i] = Roll_d6()\r\n    }\r\n\r\n    stat.sort(function(a, b){return b - a})\r\n    stat[stat.length-1] = 0\r\n\r\n    return stat.reduce((a, b) => a + b, 0)\r\n}\r\n\r\nfunction Roll_New_Array()\r\n{\r\n    var stats = [0,0,0,0,0,0]\r\n\r\n    for(var i = 0; i < 6; i++)\r\n    {\r\n        stats[i] = Roll_Stat()\r\n    }\r\n    \r\n    return stats\r\n}\r\n\r\nfunction Is_Array_Valid(array)\r\n{\r\n    array.sort(function(a, b){return b - a})\r\n    \r\n    if(array.reduce((a, b) => a + b, 0) < POINT_MIN)\r\n    {\r\n        return false\r\n    }\r\n\r\n    if(array[array.length-1] > MAX_NEG)\r\n    {\r\n        return false\r\n    }\r\n\r\n    if(array[1] < MIN_POS)\r\n    {\r\n        return false \r\n    }\r\n\r\n    return true\r\n}\r\n\r\nexport function Roll_Stats()\r\n{\r\n    var stats = [0,0,0,0,0,0]\r\n    var valid = false\r\n\r\n    while(!valid)\r\n    {\r\n        stats = Roll_New_Array()\r\n        valid = Is_Array_Valid(stats)\r\n    }\r\n    \r\n    return(stats)\r\n}","function RollButton(props)\r\n{\r\n    var setStats = props.SetStats\r\n    var rollStats = props.RollStats\r\n\r\n    var roll = function(){setStats(rollStats())}\r\n\r\n    return(<button onClick={roll} >Roll!</button>)\r\n}\r\n\r\nexport default RollButton","import React, { useState } from 'react';\r\nimport {Roll_Stats} from './RollerLogic';\r\nimport RollButton from './RollButton';\r\n\r\nfunction StatRoller(props)\r\n{\r\n    // Standards dnd mods, if you go MODIFIERS[stat] it will return the appropirate value\r\n    var MODIFIERS = [null,-5,-4,-4,-3,-3,-2,-2,-1,-1,0,0,1,1,2,2,3,3,4,4,5]\r\n\r\n    const[stats, setStats] = useState([0,0,0,0,0,0])\r\n\r\n    return(\r\n        <div>\r\n            <h1>Combly Stat Roller</h1>\r\n            <ul>\r\n        {stats.map(item => {\r\n          return <p>{item},[{MODIFIERS[item]}]</p>;\r\n        })}\r\n      </ul>\r\n            <RollButton RollStats={Roll_Stats} SetStats={setStats}/> <button>Copy</button>\r\n            <p>Parameters: ....</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatRoller","import './App.css';\nimport StatRoller from \"./Components/StatRoller/StatRoller\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>ðŸš§RPG ToolkitðŸš§</h1>\n      <StatRoller />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}